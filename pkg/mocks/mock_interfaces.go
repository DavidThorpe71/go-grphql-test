// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/interfaces.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSomeService is a mock of SomeService interface
type MockSomeService struct {
	ctrl     *gomock.Controller
	recorder *MockSomeServiceMockRecorder
}

// MockSomeServiceMockRecorder is the mock recorder for MockSomeService
type MockSomeServiceMockRecorder struct {
	mock *MockSomeService
}

// NewMockSomeService creates a new mock instance
func NewMockSomeService(ctrl *gomock.Controller) *MockSomeService {
	mock := &MockSomeService{ctrl: ctrl}
	mock.recorder = &MockSomeServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSomeService) EXPECT() *MockSomeServiceMockRecorder {
	return m.recorder
}

// SomeOperation mocks base method
func (m *MockSomeService) SomeOperation() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SomeOperation")
	ret0, _ := ret[0].(bool)
	return ret0
}

// SomeOperation indicates an expected call of SomeOperation
func (mr *MockSomeServiceMockRecorder) SomeOperation() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SomeOperation", reflect.TypeOf((*MockSomeService)(nil).SomeOperation))
}
